#!/usr/bin/env bash

# Useful methods. \o/
#
set_variable () { export $1="$2"; }
unset_variable () { unset $1; }

path_append ()  { path_remove $1; set_variable PATH "$PATH:$1"; }
path_prepend () { path_remove $1; set_variable PATH "$1:$PATH"; }
path_remove ()  { set_variable PATH `echo $PATH | awk -v RS=: -v ORS=: '$0 != "'$1'"' | sed 's/:$//'`; }

command_exists () { type "$1" &> /dev/null; }

warn () { echo -e "$1" >&2; }
info () { warn "$1"; }

deactivate_previous_ruby_version () {
  if [ $RBFU_RUBY_VERSION ]; then
    path_remove "$RUBIES_ROOT/$RBFU_RUBY_VERSION/bin"
    unset_variable GEM_PATH
    unset_variable RBFU_RUBY_VERSION
  fi
}

rbfu_activate () {
  local VERSION COMMAND MSG SOURCE
  local RBFU_ROOT="$HOME/.rbfu"
  local RUBIES_ROOT="$RBFU_ROOT/rubies"

  # Run-time configuration
  #
  if [[ $1 =~ ^@ ]]; then
    VERSION=${1:1}; shift
  fi
  COMMAND=$@
  SOURCE="from command line"

  # fall back to $PWD/.rbfu-version and $HOME/.rbfu-version if no version is given
  read_version_from_file () { if [ -f "$1" ]; then SOURCE="from $1"; VERSION=`cat $1`; fi; }
  [[ $VERSION ]] || read_version_from_file "$PWD/.rbfu-version"
  [[ $VERSION ]] || read_version_from_file "$HOME/.rbfu-version"

  # sanity checks
  [ ! $VERSION ] && warn "Please specify the Ruby version to activate." && return

  if [ $VERSION == "system" ]; then
    deactivate_previous_ruby_version
    MSG="Activated system Ruby."
  else
    # additional sanity checks
    RUBY_ROOT="$RUBIES_ROOT/$VERSION"
    if [ ! -e $RUBY_ROOT ]; then
      warn "Ruby $VERSION was requested, but is not installed. ($SOURCE)"
      warn "If you have ruby-build installed, you can install the requested version like this:"
      warn "$ ruby-build $VERSION \$HOME/.rbfu/rubies/$VERSION"
      return 1
    fi

    deactivate_previous_ruby_version

    # activate requested version
    path_prepend "$RUBY_ROOT/bin"
    set_variable "RBFU_RUBY_VERSION" "$VERSION"
    set_variable "GEM_PATH" "$RUBY_ROOT/lib/ruby/gems"

    MSG="Activated Ruby $RBFU_RUBY_VERSION."
  fi

  info "$MSG ($SOURCE)"

  # execute command, if given
  [[ $COMMAND ]] && $COMMAND
}

rbfu_activate $@
