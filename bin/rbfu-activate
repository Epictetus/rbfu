#!/usr/bin/env bash
. "$(dirname $0)/../libexec/rbfu-common"

VERSION=$1
SOURCE="from command line"

# fall back to $PWD/.rbfu-version and $HOME/.rbfu-version if no version is given
read_version_from_file () { if [ -f "$1" ]; then SOURCE="from $1"; VERSION=`cat $1`; fi; }
[[ $VERSION ]] || read_version_from_file "$PWD/.rbfu-version"
[[ $VERSION ]] || read_version_from_file "$HOME/.rbfu-version"

# sanity checks
[[ $VERSION ]] || halt "Please specify the Ruby version to activate."

deactivate_previous_ruby_version () {
  if [ $RBFU_RUBY_VERSION ]; then
    path_remove "$RBFU_ROOT/rubies/$RBFU_RUBY_VERSION/bin"
    unset_variable GEM_PATH
    unset_variable RBFU_RUBY_VERSION
  fi
}

if [ $VERSION == "system" ]; then
  deactivate_previous_ruby_version
  MSG="Activated system Ruby."
else
  # additional sanity checks
  RUBY_ROOT="$RBFU_ROOT/rubies/$VERSION"
  [ -a $RUBY_ROOT ] || halt "Ruby $VERSION was requested, but is not installed. ($SOURCE)"

  deactivate_previous_ruby_version

  # activate requested version
  path_prepend "$RUBY_ROOT/bin"
  set_variable "RBFU_RUBY_VERSION" "$VERSION"
  set_variable "GEM_PATH" "$RUBY_ROOT/lib/ruby/gems"

  MSG="Activated Ruby $RBFU_RUBY_VERSION."
fi

info "$MSG ($SOURCE)"